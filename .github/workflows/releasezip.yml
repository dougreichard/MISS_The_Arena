name: CI

on: [push]

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      # This would actually build your project, using zip for an example artifact
      - name: build project
        run: |
             zip -r release.zip . -x ".git/*" ".github/*" ".gitignore"
             echo "##[set-output name=artifact;]$(basename -- $GITHUB_REPOSITORY)"
        id: build_project
      - name: Bump version and push tag
        id: reftag
        uses: anothrNick/github-tag-action@master
        env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.reftag.outputs.new_tag }}
          release_name: Release ${{ steps.reftag.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release.zip
          asset_name: ${{ format('{0}.zip', steps.build_project.outputs.artifact) }}
          asset_content_type: application/zip
